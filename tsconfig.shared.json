// Common compiler options that will be inherited by all projects in the monorepo.
{
  "compilerOptions": {
    "module": "nodenext",
    "moduleResolution": "nodenext",
    "types": ["vite/client"],
    "jsx": "react-jsx",
    "allowJs": false,
    "allowUnreachableCode": false,
    "allowUnusedLabels": false,
    "experimentalDecorators": true,
    "forceConsistentCasingInFileNames": true,
    "isolatedModules": true,
    "noErrorTruncation": true,
    "noFallthroughCasesInSwitch": true,
    "noImplicitAny": true,
    "noImplicitReturns": true,
    "noUncheckedIndexedAccess": true,
    "noUnusedLocals": true,
    "noUnusedParameters": true,
    "resolveJsonModule": true,
    "strict": true,
    "strictNullChecks": true,
    "useDefineForClassFields": true,
    "verbatimModuleSyntax": true,

    // For project references to work correctly, the following settings must be
    // enabled, and typically should not be disabled in each project.

    // Enables project references and informs the TypeScript program where to
    // find referenced outputs.
    // https://www.typescriptlang.org/docs/handbook/project-references.html#composite
    "composite": true,
    // Project references rely on the compiled declarations (*.d.ts).
    "declaration": true,
    // Generate sourcemaps for declarations so that LSPs work correctly.
    "declarationMap": true,
    // Enables incremental compilation, greatly improving performance.
    "incremental": true,
    // If the typechecker fails, avoid generating invalid or partial declarations.
    "noEmitOnError": true,
    // Avoids eager loading and analyzing all declarations, greatly improving performance.
    "skipLibCheck": true
  }
}
